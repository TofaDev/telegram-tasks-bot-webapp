"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoveKeyboard = void 0;
const inspectable_1 = require("inspectable");
/** Remove keyboard */
let RemoveKeyboard = class RemoveKeyboard {
    constructor() {
        // TODO: remove_keyboard: true
        this.isSelective = false;
    }
    /** Use this parameter if you want to show the keyboard to specific users only */
    selective(selective = true) {
        this.isSelective = selective;
        return this;
    }
    /** Returns JSON which is compatible with Telegram's `RemoveKeyboard` interface */
    toJSON() {
        return {
            remove_keyboard: true,
            selective: this.isSelective
        };
    }
    toString() {
        return JSON.stringify(this);
    }
};
__decorate([
    (0, inspectable_1.Inspect)({ as: 'selective' })
], RemoveKeyboard.prototype, "isSelective", void 0);
RemoveKeyboard = __decorate([
    (0, inspectable_1.Inspectable)()
], RemoveKeyboard);
exports.RemoveKeyboard = RemoveKeyboard;

"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaGroup = void 0;
const inspectable_1 = require("inspectable");
/** This object represent a media group: a group of contexts with some attachments in it */
let MediaGroup = class MediaGroup {
    constructor(options) {
        this.options = options;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    /** Returns media group's ID */
    get id() {
        return this.options.id;
    }
    /** Returns a list of contexts (constructed earlier) every single of which contains an attachment */
    get contexts() {
        return this.options.contexts;
    }
    /** Returns a list of attachments (mapped through `contexts`) */
    get attachments() {
        const attachments = this.contexts.map(context => context.attachments).flat();
        return attachments;
    }
};
__decorate([
    (0, inspectable_1.Inspect)()
], MediaGroup.prototype, "id", null);
__decorate([
    (0, inspectable_1.Inspect)()
], MediaGroup.prototype, "contexts", null);
__decorate([
    (0, inspectable_1.Inspect)()
], MediaGroup.prototype, "attachments", null);
MediaGroup = __decorate([
    (0, inspectable_1.Inspectable)()
], MediaGroup);
exports.MediaGroup = MediaGroup;

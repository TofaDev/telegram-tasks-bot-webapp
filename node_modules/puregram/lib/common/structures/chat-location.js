"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatLocation = void 0;
const inspectable_1 = require("inspectable");
const location_1 = require("./location");
/** Represents a location to which a chat is connected. */
let ChatLocation = class ChatLocation {
    constructor(payload) {
        this.payload = payload;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    /** The location to which the supergroup is connected. Can't be a live location. */
    get location() {
        return new location_1.Location(this.payload.location);
    }
    /** Location address; `1-64` characters, as defined by the chat owner */
    get address() {
        return this.payload.address;
    }
    toJSON() {
        return this.payload;
    }
};
__decorate([
    (0, inspectable_1.Inspect)()
], ChatLocation.prototype, "location", null);
__decorate([
    (0, inspectable_1.Inspect)()
], ChatLocation.prototype, "address", null);
ChatLocation = __decorate([
    (0, inspectable_1.Inspectable)()
], ChatLocation);
exports.ChatLocation = ChatLocation;

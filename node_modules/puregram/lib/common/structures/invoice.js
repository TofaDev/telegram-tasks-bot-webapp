"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Invoice = void 0;
const inspectable_1 = require("inspectable");
/** This object contains basic information about an invoice. */
let Invoice = class Invoice {
    constructor(payload) {
        this.payload = payload;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    /** Product name */
    get title() {
        return this.payload.title;
    }
    /** Product description */
    get description() {
        return this.payload.description;
    }
    /**
     * Unique bot deep-linking parameter that can be used to generate this
     * invoice
     */
    get startParameter() {
        return this.payload.start_parameter;
    }
    /** Three-letter ISO 4217 currency code */
    get currency() {
        return this.payload.currency;
    }
    /**
     * Total price in the smallest units of the currency
     * (integer, not float/double). For example, for a price of
     * `US$ 1.45` pass `amount = 145`. See the `exp` parameter in
     * [currencies.json](https://core.telegram.org/bots/payments/currencies.json),
     * it shows the number of digits past the decimal point for each currency
     * (2 for the majority of currencies).
     */
    get totalAmount() {
        return this.payload.total_amount;
    }
    toJSON() {
        return this.payload;
    }
};
__decorate([
    (0, inspectable_1.Inspect)()
], Invoice.prototype, "title", null);
__decorate([
    (0, inspectable_1.Inspect)()
], Invoice.prototype, "description", null);
__decorate([
    (0, inspectable_1.Inspect)()
], Invoice.prototype, "startParameter", null);
__decorate([
    (0, inspectable_1.Inspect)()
], Invoice.prototype, "currency", null);
__decorate([
    (0, inspectable_1.Inspect)()
], Invoice.prototype, "totalAmount", null);
Invoice = __decorate([
    (0, inspectable_1.Inspectable)()
], Invoice);
exports.Invoice = Invoice;

"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderInfo = void 0;
const inspectable_1 = require("inspectable");
const shipping_address_1 = require("./shipping-address");
/** This object represents information about an order. */
let OrderInfo = class OrderInfo {
    constructor(payload) {
        this.payload = payload;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    /** User name */
    get name() {
        return this.payload.name;
    }
    /** User's phone number */
    get phoneNumber() {
        return this.payload.phone_number;
    }
    /** User email */
    get email() {
        return this.payload.email;
    }
    /** User shipping address */
    get shippingAddress() {
        const { shipping_address } = this.payload;
        if (!shipping_address) {
            return;
        }
        return new shipping_address_1.ShippingAddress(shipping_address);
    }
    toJSON() {
        return this.payload;
    }
};
__decorate([
    (0, inspectable_1.Inspect)({ nullable: false })
], OrderInfo.prototype, "name", null);
__decorate([
    (0, inspectable_1.Inspect)({ nullable: false })
], OrderInfo.prototype, "phoneNumber", null);
__decorate([
    (0, inspectable_1.Inspect)({ nullable: false })
], OrderInfo.prototype, "email", null);
__decorate([
    (0, inspectable_1.Inspect)({ nullable: false })
], OrderInfo.prototype, "shippingAddress", null);
OrderInfo = __decorate([
    (0, inspectable_1.Inspectable)()
], OrderInfo);
exports.OrderInfo = OrderInfo;

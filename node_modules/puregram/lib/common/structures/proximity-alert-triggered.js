"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProximityAlertTriggered = void 0;
const inspectable_1 = require("inspectable");
const user_1 = require("./user");
/**
 * This object represents the content of a service message,
 * sent whenever a user in the chat triggers a proximity alert set by another user.
 */
let ProximityAlertTriggered = class ProximityAlertTriggered {
    constructor(payload) {
        this.payload = payload;
    }
    /** User that triggered the alert */
    get traveler() {
        return new user_1.User(this.payload.traveler);
    }
    /** User that set the alert */
    get watcher() {
        return new user_1.User(this.payload.watcher);
    }
    /** The distance between the users */
    get distance() {
        return this.payload.distance;
    }
    toJSON() {
        return this.payload;
    }
};
__decorate([
    (0, inspectable_1.Inspect)()
], ProximityAlertTriggered.prototype, "traveler", null);
__decorate([
    (0, inspectable_1.Inspect)()
], ProximityAlertTriggered.prototype, "watcher", null);
__decorate([
    (0, inspectable_1.Inspect)()
], ProximityAlertTriggered.prototype, "distance", null);
ProximityAlertTriggered = __decorate([
    (0, inspectable_1.Inspectable)()
], ProximityAlertTriggered);
exports.ProximityAlertTriggered = ProximityAlertTriggered;

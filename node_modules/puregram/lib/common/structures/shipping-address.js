"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShippingAddress = void 0;
const inspectable_1 = require("inspectable");
/** This object represents a shipping address. */
let ShippingAddress = class ShippingAddress {
    constructor(payload) {
        this.payload = payload;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    /** ISO 3166-1 alpha-2 country code */
    get countryCode() {
        return this.payload.country_code;
    }
    /** State, if applicable */
    get state() {
        return this.payload.state;
    }
    /** City */
    get city() {
        return this.payload.city;
    }
    /** First line for the address */
    get firstStreetLine() {
        return this.payload.street_line1;
    }
    /** Second line for the address */
    get secondStreetLine() {
        return this.payload.street_line2;
    }
    /** Address post code */
    get postCode() {
        return this.payload.post_code;
    }
    toJSON() {
        return this.payload;
    }
};
__decorate([
    (0, inspectable_1.Inspect)()
], ShippingAddress.prototype, "countryCode", null);
__decorate([
    (0, inspectable_1.Inspect)()
], ShippingAddress.prototype, "state", null);
__decorate([
    (0, inspectable_1.Inspect)()
], ShippingAddress.prototype, "city", null);
__decorate([
    (0, inspectable_1.Inspect)()
], ShippingAddress.prototype, "firstStreetLine", null);
__decorate([
    (0, inspectable_1.Inspect)()
], ShippingAddress.prototype, "secondStreetLine", null);
__decorate([
    (0, inspectable_1.Inspect)()
], ShippingAddress.prototype, "postCode", null);
ShippingAddress = __decorate([
    (0, inspectable_1.Inspectable)()
], ShippingAddress);
exports.ShippingAddress = ShippingAddress;

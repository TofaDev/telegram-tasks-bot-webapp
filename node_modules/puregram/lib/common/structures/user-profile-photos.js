"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserProfilePhotos = void 0;
const inspectable_1 = require("inspectable");
const photo_size_1 = require("./photo-size");
/** This object represent a user's profile pictures. */
let UserProfilePhotos = class UserProfilePhotos {
    constructor(payload) {
        this.payload = payload;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    /** Total number of profile pictures the target user has */
    get totalCount() {
        return this.payload.total_count;
    }
    /** Requested profile pictures (in up to 4 sizes each) */
    get photos() {
        const { photos } = this.payload;
        if (!photos.length) {
            return;
        }
        return photos.map(row => row.map(element => new photo_size_1.PhotoSize(element)));
    }
    toJSON() {
        return this.payload;
    }
};
__decorate([
    (0, inspectable_1.Inspect)()
], UserProfilePhotos.prototype, "totalCount", null);
__decorate([
    (0, inspectable_1.Inspect)({ nullable: false })
], UserProfilePhotos.prototype, "photos", null);
UserProfilePhotos = __decorate([
    (0, inspectable_1.Inspectable)()
], UserProfilePhotos);
exports.UserProfilePhotos = UserProfilePhotos;

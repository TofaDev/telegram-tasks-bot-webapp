import * as Interfaces from '../generated/telegram-interfaces';
import { Constructor, Require } from '../types/types';
import { Telegram } from '../telegram';
import { PollAnswer } from '../common/structures';
import { Context } from './context';
import { SendMixin, CloneMixin } from './mixins';
interface PollAnswerContextOptions {
    telegram: Telegram;
    update: Interfaces.TelegramUpdate;
    payload: Interfaces.TelegramPollAnswer;
    updateId: number;
}
declare class PollAnswerContext extends Context {
    payload: Interfaces.TelegramPollAnswer;
    constructor(options: PollAnswerContextOptions);
    /** Checks whether the current answer was non-anonymous and contains `user` field */
    isFromUser(): this is Require<this, 'user'>;
    /** Checks if current answer was answered anonymously and the `voterChat` is available */
    isFromChat(): this is Require<this, 'voterChat'>;
}
interface PollAnswerContext extends Constructor<PollAnswerContext>, PollAnswer, SendMixin, CloneMixin<PollAnswerContext, PollAnswerContextOptions> {
}
export { PollAnswerContext };

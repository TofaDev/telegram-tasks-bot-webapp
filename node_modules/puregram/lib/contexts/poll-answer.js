"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PollAnswerContext = void 0;
const inspectable_1 = require("inspectable");
const helpers_1 = require("../utils/helpers");
const structures_1 = require("../common/structures");
const context_1 = require("./context");
const mixins_1 = require("./mixins");
class PollAnswerContext extends context_1.Context {
    constructor(options) {
        super({
            telegram: options.telegram,
            updateType: 'poll_answer',
            updateId: options.updateId,
            update: options.update
        });
        this.payload = options.payload;
    }
    /** Checks whether the current answer was non-anonymous and contains `user` field */
    isFromUser() {
        return this.user !== undefined;
    }
    /** Checks if current answer was answered anonymously and the `voterChat` is available */
    isFromChat() {
        return this.voterChat !== undefined;
    }
}
exports.PollAnswerContext = PollAnswerContext;
(0, helpers_1.applyMixins)(PollAnswerContext, [structures_1.PollAnswer, mixins_1.SendMixin, mixins_1.CloneMixin]);
(0, inspectable_1.inspectable)(PollAnswerContext, {
    serialize(context) {
        return {
            pollId: context.pollId,
            user: context.user,
            senderId: context.senderId,
            optionIds: context.optionIds
        };
    }
});
